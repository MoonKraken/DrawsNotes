image: "rust:latest"

stages:
  - test
  - build
  - deploy

test:cargo:
  stage: test
  script:
    - rustc --version && cargo --version
    - cargo test --workspace --verbose

build:docker:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache curl jq python3 py3-pip aws-cli
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
  script:
    - docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$CI_COMMIT_SHA -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
    - docker push $ECR_REGISTRY/$ECR_REPOSITORY:$CI_COMMIT_SHA
    - docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

deploy:ecs:
  stage: deploy
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  script:
    - aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
    - aws ecs wait services-stable --cluster $ECS_CLUSTER --services $ECS_SERVICE
  environment: production
